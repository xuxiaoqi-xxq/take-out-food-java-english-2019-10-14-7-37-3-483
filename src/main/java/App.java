import java.util.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        List<Item> totalItems = itemRepository.findAll();
        List<Item> items = new ArrayList<>();
        Map<String, Integer> counts = new HashMap<>();
        Map<String, Integer> prices = new HashMap<>();
        String result = "============= Order details =============\n";
        int totalPrice = 0;
        for(String inputItem: inputs){
            String id = inputItem.substring(0, inputItem.indexOf(" "));
            int count = Integer.valueOf(inputItem.substring(inputItem.lastIndexOf(" ") + 1, inputItem.length()));
            counts.put(id, count);
            for(Item item: totalItems){
                if(item.getId().equals(id)){
                    items.add(new Item(id, item.getName(), item.getPrice()));
                    prices.put(id, (int)item.getPrice());
                    totalPrice += item.getPrice() * count;
                    result += item.getName() + " x " + count + " = " + (int)(item.getPrice() * count) + " yuan\n";
                    break;
                }
            }
        }
        result += "-----------------------------------\n";
        List<SalesPromotion> totalSalesPromotions = salesPromotionRepository.findAll();
        int savingMoney = 0;
        String promotionInfo = "";
        if(totalPrice >= 30){
            savingMoney = 6;
            promotionInfo = "Promotion used:\n" +
                    "满30减6 yuan，saving 6 yuan\n" +
                    "-----------------------------------\n";
        }

        if(totalSalesPromotions.get(1).getRelatedItems() != null && counts.keySet().containsAll(totalSalesPromotions.get(1).getRelatedItems())){
            int tempSavingMoney = 0;
            List<String> promotionItemIds = totalSalesPromotions.get(1).getRelatedItems();
            for(String id: promotionItemIds){
                tempSavingMoney += (int)prices.get(id) * counts.get(id) / 2;
            }
            if(tempSavingMoney > savingMoney){
                savingMoney = tempSavingMoney;
                promotionInfo = "Promotion used:\n" +
                        "Half price for certain dishes (Braised chicken，Cold noodles)，saving " + savingMoney + " yuan\n" +
                        "-----------------------------------\n";


            }
        }
        result += promotionInfo;
        result += "Total：" + (totalPrice - savingMoney) + " yuan\n" +
                "===================================";
        return result;
    }
}
